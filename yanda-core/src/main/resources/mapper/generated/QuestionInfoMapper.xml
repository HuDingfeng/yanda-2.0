<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yanda.core.mapper.generated.QuestionInfoMapper">
  <resultMap id="BasePropertyResultMap" type="com.yanda.core.entity.generated.QuestionInfo">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="question_id" jdbcType="BIGINT" property="questionId" />
    <result column="question_name" jdbcType="VARCHAR" property="questionName" />
    <result column="question_content" jdbcType="VARCHAR" property="questionContent" />
    <result column="question_type" jdbcType="INTEGER" property="questionType" />
    <result column="answer" jdbcType="VARCHAR" property="answer" />
    <result column="answer_num" jdbcType="INTEGER" property="answerNum" />
    <result column="answer_A" jdbcType="VARCHAR" property="answerA" />
    <result column="answer_B" jdbcType="VARCHAR" property="answerB" />
    <result column="answer_C" jdbcType="VARCHAR" property="answerC" />
    <result column="answer_D" jdbcType="VARCHAR" property="answerD" />
    <result column="module" jdbcType="INTEGER" property="module" />
    <result column="img_appendix_id" jdbcType="BIGINT" property="imgAppendixId" />
    <result column="mv_appendix_id" jdbcType="BIGINT" property="mvAppendixId" />
    <result column="episode_id" jdbcType="BIGINT" property="episodeId" />
    <result column="vip_type" jdbcType="INTEGER" property="vipType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="classify_nj" jdbcType="INTEGER" property="classifyNj" />
    <result column="classify_z" jdbcType="INTEGER" property="classifyZ" />
    <result column="classify_j" jdbcType="INTEGER" property="classifyJ" />
    <result column="classify_dy" jdbcType="INTEGER" property="classifyDy" />
    <result column="classify_q" jdbcType="INTEGER" property="classifyQ" />
    <result column="classify_id" jdbcType="VARCHAR" property="classifyId" />
    <result column="classify_name" jdbcType="VARCHAR" property="classifyName" />
  </resultMap>
  <resultMap id="BaseResultMap" type="com.yanda.core.entity.generated.QuestionInfo">
    <!--
      WARNING - @mbg.generated
    -->
    <constructor>
      <idArg column="question_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="question_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="question_content" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="question_type" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="answer" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="answer_num" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="answer_A" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="answer_B" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="answer_C" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="answer_D" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="module" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="img_appendix_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="mv_appendix_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="episode_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="vip_type" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="classify_nj" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="classify_z" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="classify_j" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="classify_dy" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="classify_q" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="classify_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="classify_name" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    question_id, question_name, question_content, question_type, answer, answer_num, 
    answer_A, answer_B, answer_C, answer_D, module, img_appendix_id, mv_appendix_id, 
    episode_id, vip_type, create_time, update_time, classify_nj, classify_z, classify_j, 
    classify_dy, classify_q, classify_id, classify_name
  </sql>
  <select id="selectByExample" parameterType="com.yanda.core.entity.generated.QuestionInfoExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_question_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BasePropertyResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select
    <if test="example.distinct">
      distinct
    </if>
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    from t_question_info
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.yanda.core.entity.generated.QuestionInfoExample">
    <!--
      WARNING - @mbg.generated
    -->
    delete from t_question_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.yanda.core.entity.generated.QuestionInfoExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
    -->
    select count(*) from t_question_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update t_question_info
    <set>
      <if test="record.questionId != null">
        question_id = #{record.questionId,jdbcType=BIGINT},
      </if>
      <if test="record.questionName != null">
        question_name = #{record.questionName,jdbcType=VARCHAR},
      </if>
      <if test="record.questionContent != null">
        question_content = #{record.questionContent,jdbcType=VARCHAR},
      </if>
      <if test="record.questionType != null">
        question_type = #{record.questionType,jdbcType=INTEGER},
      </if>
      <if test="record.answer != null">
        answer = #{record.answer,jdbcType=VARCHAR},
      </if>
      <if test="record.answerNum != null">
        answer_num = #{record.answerNum,jdbcType=INTEGER},
      </if>
      <if test="record.answerA != null">
        answer_A = #{record.answerA,jdbcType=VARCHAR},
      </if>
      <if test="record.answerB != null">
        answer_B = #{record.answerB,jdbcType=VARCHAR},
      </if>
      <if test="record.answerC != null">
        answer_C = #{record.answerC,jdbcType=VARCHAR},
      </if>
      <if test="record.answerD != null">
        answer_D = #{record.answerD,jdbcType=VARCHAR},
      </if>
      <if test="record.module != null">
        module = #{record.module,jdbcType=INTEGER},
      </if>
      <if test="record.imgAppendixId != null">
        img_appendix_id = #{record.imgAppendixId,jdbcType=BIGINT},
      </if>
      <if test="record.mvAppendixId != null">
        mv_appendix_id = #{record.mvAppendixId,jdbcType=BIGINT},
      </if>
      <if test="record.episodeId != null">
        episode_id = #{record.episodeId,jdbcType=BIGINT},
      </if>
      <if test="record.vipType != null">
        vip_type = #{record.vipType,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.classifyNj != null">
        classify_nj = #{record.classifyNj,jdbcType=INTEGER},
      </if>
      <if test="record.classifyZ != null">
        classify_z = #{record.classifyZ,jdbcType=INTEGER},
      </if>
      <if test="record.classifyJ != null">
        classify_j = #{record.classifyJ,jdbcType=INTEGER},
      </if>
      <if test="record.classifyDy != null">
        classify_dy = #{record.classifyDy,jdbcType=INTEGER},
      </if>
      <if test="record.classifyQ != null">
        classify_q = #{record.classifyQ,jdbcType=INTEGER},
      </if>
      <if test="record.classifyId != null">
        classify_id = #{record.classifyId,jdbcType=VARCHAR},
      </if>
      <if test="record.classifyName != null">
        classify_name = #{record.classifyName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update t_question_info
    set question_id = #{record.questionId,jdbcType=BIGINT},
      question_name = #{record.questionName,jdbcType=VARCHAR},
      question_content = #{record.questionContent,jdbcType=VARCHAR},
      question_type = #{record.questionType,jdbcType=INTEGER},
      answer = #{record.answer,jdbcType=VARCHAR},
      answer_num = #{record.answerNum,jdbcType=INTEGER},
      answer_A = #{record.answerA,jdbcType=VARCHAR},
      answer_B = #{record.answerB,jdbcType=VARCHAR},
      answer_C = #{record.answerC,jdbcType=VARCHAR},
      answer_D = #{record.answerD,jdbcType=VARCHAR},
      module = #{record.module,jdbcType=INTEGER},
      img_appendix_id = #{record.imgAppendixId,jdbcType=BIGINT},
      mv_appendix_id = #{record.mvAppendixId,jdbcType=BIGINT},
      episode_id = #{record.episodeId,jdbcType=BIGINT},
      vip_type = #{record.vipType,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      classify_nj = #{record.classifyNj,jdbcType=INTEGER},
      classify_z = #{record.classifyZ,jdbcType=INTEGER},
      classify_j = #{record.classifyJ,jdbcType=INTEGER},
      classify_dy = #{record.classifyDy,jdbcType=INTEGER},
      classify_q = #{record.classifyQ,jdbcType=INTEGER},
      classify_id = #{record.classifyId,jdbcType=VARCHAR},
      classify_name = #{record.classifyName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BasePropertyResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    from t_question_info
    where question_id = #{questionId,jdbcType=BIGINT}
  </select>
  <insert id="upsert" parameterType="com.yanda.core.entity.generated.QuestionInfo">
    <!--
      WARNING - @mbg.generated
    -->
    insert into t_question_info
    (question_id, question_name, question_content, question_type, answer, answer_num, 
      answer_A, answer_B, answer_C, answer_D, module, img_appendix_id, mv_appendix_id, 
      episode_id, vip_type, create_time, update_time, classify_nj, classify_z, classify_j, 
      classify_dy, classify_q, classify_id, classify_name)
    values
    (#{questionId,jdbcType=BIGINT}, #{questionName,jdbcType=VARCHAR}, #{questionContent,jdbcType=VARCHAR}, 
      #{questionType,jdbcType=INTEGER}, #{answer,jdbcType=VARCHAR}, #{answerNum,jdbcType=INTEGER}, 
      #{answerA,jdbcType=VARCHAR}, #{answerB,jdbcType=VARCHAR}, #{answerC,jdbcType=VARCHAR}, 
      #{answerD,jdbcType=VARCHAR}, #{module,jdbcType=INTEGER}, #{imgAppendixId,jdbcType=BIGINT}, 
      #{mvAppendixId,jdbcType=BIGINT}, #{episodeId,jdbcType=BIGINT}, #{vipType,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{classifyNj,jdbcType=INTEGER}, 
      #{classifyZ,jdbcType=INTEGER}, #{classifyJ,jdbcType=INTEGER}, #{classifyDy,jdbcType=INTEGER}, 
      #{classifyQ,jdbcType=INTEGER}, #{classifyId,jdbcType=VARCHAR}, #{classifyName,jdbcType=VARCHAR}
      )
    on duplicate key update 
    question_id = #{questionId,jdbcType=BIGINT}, 
    question_name = #{questionName,jdbcType=VARCHAR}, 
    question_content = #{questionContent,jdbcType=VARCHAR}, 
    question_type = #{questionType,jdbcType=INTEGER}, 
    answer = #{answer,jdbcType=VARCHAR}, 
    answer_num = #{answerNum,jdbcType=INTEGER}, 
    answer_A = #{answerA,jdbcType=VARCHAR}, 
    answer_B = #{answerB,jdbcType=VARCHAR}, 
    answer_C = #{answerC,jdbcType=VARCHAR}, 
    answer_D = #{answerD,jdbcType=VARCHAR}, 
    module = #{module,jdbcType=INTEGER}, 
    img_appendix_id = #{imgAppendixId,jdbcType=BIGINT}, 
    mv_appendix_id = #{mvAppendixId,jdbcType=BIGINT}, 
    episode_id = #{episodeId,jdbcType=BIGINT}, 
    vip_type = #{vipType,jdbcType=INTEGER}, 
    create_time = #{createTime,jdbcType=TIMESTAMP}, 
    update_time = #{updateTime,jdbcType=TIMESTAMP}, 
    classify_nj = #{classifyNj,jdbcType=INTEGER}, 
    classify_z = #{classifyZ,jdbcType=INTEGER}, 
    classify_j = #{classifyJ,jdbcType=INTEGER}, 
    classify_dy = #{classifyDy,jdbcType=INTEGER}, 
    classify_q = #{classifyQ,jdbcType=INTEGER}, 
    classify_id = #{classifyId,jdbcType=VARCHAR}, 
    classify_name = #{classifyName,jdbcType=VARCHAR}
  </insert>
  <insert id="upsertSelective" parameterType="com.yanda.core.entity.generated.QuestionInfo">
    <!--
      WARNING - @mbg.generated
    -->
    insert into t_question_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="questionId != null">
        question_id,
      </if>
      <if test="questionName != null">
        question_name,
      </if>
      <if test="questionContent != null">
        question_content,
      </if>
      <if test="questionType != null">
        question_type,
      </if>
      <if test="answer != null">
        answer,
      </if>
      <if test="answerNum != null">
        answer_num,
      </if>
      <if test="answerA != null">
        answer_A,
      </if>
      <if test="answerB != null">
        answer_B,
      </if>
      <if test="answerC != null">
        answer_C,
      </if>
      <if test="answerD != null">
        answer_D,
      </if>
      <if test="module != null">
        module,
      </if>
      <if test="imgAppendixId != null">
        img_appendix_id,
      </if>
      <if test="mvAppendixId != null">
        mv_appendix_id,
      </if>
      <if test="episodeId != null">
        episode_id,
      </if>
      <if test="vipType != null">
        vip_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="classifyNj != null">
        classify_nj,
      </if>
      <if test="classifyZ != null">
        classify_z,
      </if>
      <if test="classifyJ != null">
        classify_j,
      </if>
      <if test="classifyDy != null">
        classify_dy,
      </if>
      <if test="classifyQ != null">
        classify_q,
      </if>
      <if test="classifyId != null">
        classify_id,
      </if>
      <if test="classifyName != null">
        classify_name,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="questionId != null">
        #{questionId,jdbcType=BIGINT},
      </if>
      <if test="questionName != null">
        #{questionName,jdbcType=VARCHAR},
      </if>
      <if test="questionContent != null">
        #{questionContent,jdbcType=VARCHAR},
      </if>
      <if test="questionType != null">
        #{questionType,jdbcType=INTEGER},
      </if>
      <if test="answer != null">
        #{answer,jdbcType=VARCHAR},
      </if>
      <if test="answerNum != null">
        #{answerNum,jdbcType=INTEGER},
      </if>
      <if test="answerA != null">
        #{answerA,jdbcType=VARCHAR},
      </if>
      <if test="answerB != null">
        #{answerB,jdbcType=VARCHAR},
      </if>
      <if test="answerC != null">
        #{answerC,jdbcType=VARCHAR},
      </if>
      <if test="answerD != null">
        #{answerD,jdbcType=VARCHAR},
      </if>
      <if test="module != null">
        #{module,jdbcType=INTEGER},
      </if>
      <if test="imgAppendixId != null">
        #{imgAppendixId,jdbcType=BIGINT},
      </if>
      <if test="mvAppendixId != null">
        #{mvAppendixId,jdbcType=BIGINT},
      </if>
      <if test="episodeId != null">
        #{episodeId,jdbcType=BIGINT},
      </if>
      <if test="vipType != null">
        #{vipType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="classifyNj != null">
        #{classifyNj,jdbcType=INTEGER},
      </if>
      <if test="classifyZ != null">
        #{classifyZ,jdbcType=INTEGER},
      </if>
      <if test="classifyJ != null">
        #{classifyJ,jdbcType=INTEGER},
      </if>
      <if test="classifyDy != null">
        #{classifyDy,jdbcType=INTEGER},
      </if>
      <if test="classifyQ != null">
        #{classifyQ,jdbcType=INTEGER},
      </if>
      <if test="classifyId != null">
        #{classifyId,jdbcType=VARCHAR},
      </if>
      <if test="classifyName != null">
        #{classifyName,jdbcType=VARCHAR},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="questionId != null">
        question_id = #{questionId,jdbcType=BIGINT},
      </if>
      <if test="questionName != null">
        question_name = #{questionName,jdbcType=VARCHAR},
      </if>
      <if test="questionContent != null">
        question_content = #{questionContent,jdbcType=VARCHAR},
      </if>
      <if test="questionType != null">
        question_type = #{questionType,jdbcType=INTEGER},
      </if>
      <if test="answer != null">
        answer = #{answer,jdbcType=VARCHAR},
      </if>
      <if test="answerNum != null">
        answer_num = #{answerNum,jdbcType=INTEGER},
      </if>
      <if test="answerA != null">
        answer_A = #{answerA,jdbcType=VARCHAR},
      </if>
      <if test="answerB != null">
        answer_B = #{answerB,jdbcType=VARCHAR},
      </if>
      <if test="answerC != null">
        answer_C = #{answerC,jdbcType=VARCHAR},
      </if>
      <if test="answerD != null">
        answer_D = #{answerD,jdbcType=VARCHAR},
      </if>
      <if test="module != null">
        module = #{module,jdbcType=INTEGER},
      </if>
      <if test="imgAppendixId != null">
        img_appendix_id = #{imgAppendixId,jdbcType=BIGINT},
      </if>
      <if test="mvAppendixId != null">
        mv_appendix_id = #{mvAppendixId,jdbcType=BIGINT},
      </if>
      <if test="episodeId != null">
        episode_id = #{episodeId,jdbcType=BIGINT},
      </if>
      <if test="vipType != null">
        vip_type = #{vipType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="classifyNj != null">
        classify_nj = #{classifyNj,jdbcType=INTEGER},
      </if>
      <if test="classifyZ != null">
        classify_z = #{classifyZ,jdbcType=INTEGER},
      </if>
      <if test="classifyJ != null">
        classify_j = #{classifyJ,jdbcType=INTEGER},
      </if>
      <if test="classifyDy != null">
        classify_dy = #{classifyDy,jdbcType=INTEGER},
      </if>
      <if test="classifyQ != null">
        classify_q = #{classifyQ,jdbcType=INTEGER},
      </if>
      <if test="classifyId != null">
        classify_id = #{classifyId,jdbcType=VARCHAR},
      </if>
      <if test="classifyName != null">
        classify_name = #{classifyName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
</mapper>